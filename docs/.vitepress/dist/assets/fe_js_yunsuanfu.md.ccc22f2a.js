import{_ as s,o as a,c as l,a as n}from"./app.1f94238b.js";const F=JSON.parse('{"title":"初识 javaScript","description":"","frontmatter":{},"headers":[{"level":2,"title":"解释性语言和编译型语言","slug":"解释性语言和编译型语言","link":"#解释性语言和编译型语言","children":[{"level":3,"title":"1.概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":3,"title":"2.执行过程","slug":"_2-执行过程","link":"#_2-执行过程","children":[]}]},{"level":2,"title":"标识符，关键字，保留字","slug":"标识符-关键字-保留字","link":"#标识符-关键字-保留字","children":[{"level":3,"title":"（一）标识符","slug":"一-标识符","link":"#一-标识符","children":[]},{"level":3,"title":"(二)关键字","slug":"二-关键字","link":"#二-关键字","children":[]},{"level":3,"title":"(三)保留字","slug":"三-保留字","link":"#三-保留字","children":[]}]},{"level":2,"title":"运算符","slug":"运算符","link":"#运算符","children":[{"level":3,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":3,"title":"比较运算符概述","slug":"比较运算符概述","link":"#比较运算符概述","children":[]},{"level":3,"title":"小结","slug":"小结-1","link":"#小结-1","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]}]}],"relativePath":"fe/js/yunsuanfu.md"}'),t={name:"fe/js/yunsuanfu.md"},o=n(`<h1 id="初识-javascript" tabindex="-1">初识 javaScript <a class="header-anchor" href="#初识-javascript" aria-hidden="true">#</a></h1><h2 id="解释性语言和编译型语言" tabindex="-1">解释性语言和编译型语言 <a class="header-anchor" href="#解释性语言和编译型语言" aria-hidden="true">#</a></h2><h3 id="_1-概述" tabindex="-1">1.概述 <a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a></h3><p>计算机不能直接理解除机器语言以外的语言，所以要把程序员所写的编程语言翻译成机器语言才能被执行程序，程序语言翻译成机器语言的工具，被称为翻译器</p><p><img src="https://beichen-www.github.io/images/notes/js/20250718-101541.jpg" alt="20250718-101541"></p><ul><li>翻译器翻译的方式有两种：一种是编译，一种是解释，两种方式之间的区别在于翻译的时间点不同</li><li>编译器是在代码执行之前，生成中间代码文件</li><li>解释器是在运行时进行及时解释，并立即执行(当编译器以解释方式运行的时候，也称之为解释器)</li></ul><h3 id="_2-执行过程" tabindex="-1">2.执行过程 <a class="header-anchor" href="#_2-执行过程" aria-hidden="true">#</a></h3><p><img src="https://beichen-www.github.io/images/notes/js/20250718-105134.jpg" alt="20250718-105134"></p><p>类似于请客吃饭</p><ul><li>编译语言：首先先把所有菜上齐了，才能吃饭</li><li>解释语言：好比吃火锅，边吃边涮，同时进行</li></ul><h2 id="标识符-关键字-保留字" tabindex="-1">标识符，关键字，保留字 <a class="header-anchor" href="#标识符-关键字-保留字" aria-hidden="true">#</a></h2><h3 id="一-标识符" tabindex="-1">（一）标识符 <a class="header-anchor" href="#一-标识符" aria-hidden="true">#</a></h3><p>标识符：就是指开发人员为变量，属性，函数，参数取的名字(自定义)</p><p>注意：标识符：不能是关键字或者保留字</p><h3 id="二-关键字" tabindex="-1">(二)关键字 <a class="header-anchor" href="#二-关键字" aria-hidden="true">#</a></h3><p>关键字：是指 JS 本身已经使用了的字，不能再把它充当变量名，方法名。(一旦使用就是在制造 BUG)</p><p>包括：break，case，catch，continue，default，delete，do，else，finally，for，function，if，in，instanceof，new，return，switch，this，throw，try，typeof，var，void，while，with 等。</p><h3 id="三-保留字" tabindex="-1">(三)保留字 <a class="header-anchor" href="#三-保留字" aria-hidden="true">#</a></h3><p>保留字：实际就是预留的“关键字”，意思是现在 虽然不是关键字,但是别人是潜力股，未来可能成为关键字，同样不能使用它们当变量名或方法名</p><p>包括：abstract，enum，int，short，boolean，export，interface，static，byte，extends，long，super，char，final，native，synchronized，class，float，package，throws，const，goto，private，transient，debugger，implements，protected，volatile，double，import，public 等。</p><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-hidden="true">#</a></h2><p>运算符：也被称为操作符，是用于实现赋值，比较和执行算数运算等功能的符号。</p><p>js 中常用的运算符有</p><ul><li>算数运算符</li><li>递增和递减运算符</li><li>比较运算符</li><li>逻辑运算符</li><li>赋值运算符</li></ul><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h3><p>概念：算术运算使用的符号，用于执行两个变量或值的算术运算。</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>10+20=30</td></tr><tr><td>-</td><td>减</td><td>120-10=110</td></tr><tr><td>*</td><td>乘</td><td>10*20=200</td></tr><tr><td>/</td><td>除</td><td>10/20=0.5</td></tr><tr><td>%</td><td>取模(取余数)</td><td>得到的是除法的余数 9%2=1</td></tr></tbody></table><h4 id="浮点数的精确度问题" tabindex="-1">浮点数的精确度问题 <a class="header-anchor" href="#浮点数的精确度问题" aria-hidden="true">#</a></h4><p>浮点数的最高精确度是 17 位小数，但是在进行算术计算时其精确度远远不如整数、</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//结果不是 0.3，而是0.30000000000000004</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.07</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//7.000000000000001,而是7.000000000000001</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//讨论</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><p>所以：不要直接判断两个浮点数是否相等 表达式和返回值 表达式:是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合 简单理解:是由数字、运算符、变量等组成的式子</p><p>如何解决：如何解决 0.1 + 0.2 === 0.3 结果为 false 的问题</p><p>方法 1：使用容差值（epsilon）的方式比较</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">EPSILON</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><p>方法 2：使用订单数运算，将小数转换为整数进行计算，避免浮点数误差</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">precision</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">precision</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">precision</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">precision</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><p>方法 3：使用专门的库，如 <code>decimal.js</code> 或 <code>big.js</code> 处理高精度计算：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Decimal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">decimal.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Decimal</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &#39;0.3&#39;</span></span>
<span class="line"></span></code></pre></div><p>小结：</p><p>javascript 的浮点数精度问题是所有使用 IEEE754 标准的编程语言共有的特性，并非语言缺陷（JavaScript 内部使用 IEEE 754 双精度 64 位浮点数 ）</p><p>扩展：</p><p>类似的有 <strong>Python</strong>、<strong>Java</strong>、<strong>C/C++</strong>、<strong>Ruby</strong>、<strong>PHP</strong>、<strong>Rust</strong></p><h4 id="递增和递减运算符概述" tabindex="-1">递增和递减运算符概述 <a class="header-anchor" href="#递增和递减运算符概述" aria-hidden="true">#</a></h4><p>如果需要反复给数字变量添加或减去 1。可以使用递增( ++ )和递减( – )运算符来完成。</p><p>在 JavaScript 中,递增( ++ )和递减( – )既可以放在变量前面。也可以放在变量后面。放在变量前面时，</p><p>我们可以称为前置递增(递减)运算符,放在变量后面时,我们可以称为后置递增(递减)运算符。</p><p>注意:递增和递减运算符必须和变量配合使用。</p><h4 id="递增运算符" tabindex="-1">递增运算符 <a class="header-anchor" href="#递增运算符" aria-hidden="true">#</a></h4><h5 id="前置递增运算符" tabindex="-1">前置递增运算符 <a class="header-anchor" href="#前置递增运算符" aria-hidden="true">#</a></h5><p>++num 前置递增,就是自加 1,类似于 num=num+1 ,但是 ++num 写起来更简单。</p><p>使用口诀:<strong>先自加，后返回值</strong></p><h5 id="后置递增运算符" tabindex="-1">后置递增运算符 <a class="header-anchor" href="#后置递增运算符" aria-hidden="true">#</a></h5><p>++num 前置递增,就是自加 1,类似于 num=num+1 ,但是 num++ 写起来更简单。</p><p>使用口诀:<strong>先自加，后返回值</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(age)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//10</span></span>
<span class="line"><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(age)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//11</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">p </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//21</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//先加1后返回值(返回初始的值)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//后置++</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//11</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//单独使用自增自减，效果一样</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> number </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//先返回值(返回初始的值)，再加+</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(number</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//20</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(number)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//11</span></span>
<span class="line"></span></code></pre></div><h3 id="比较运算符概述" tabindex="-1">比较运算符概述 <a class="header-anchor" href="#比较运算符概述" aria-hidden="true">#</a></h3><p>概念：比较运算符是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值(true/false)作成运算结果</p><table><thead><tr><th>运算符</th><th>说明</th><th>案例</th><th>结果</th></tr></thead><tbody><tr><td>&lt;</td><td>小于</td><td>1&lt;2</td><td>true</td></tr><tr><td>&gt;</td><td>大与</td><td>1&gt;2</td><td>false</td></tr><tr><td>&gt; =</td><td>大于等于</td><td>2&gt;=2</td><td>true</td></tr><tr><td>&lt; =</td><td>小于等于</td><td>3&lt;=2</td><td>false</td></tr><tr><td>==</td><td>判等号(会转型)</td><td>37=37</td><td>true</td></tr><tr><td>!=</td><td>不等号</td><td>37!=37</td><td>false</td></tr><tr><td>=== !==</td><td>全等 要求值和数据类型都一致</td><td>37===‘37’</td><td>false</td></tr></tbody></table><h6 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-hidden="true">#</a></h6><table><thead><tr><th>符号</th><th>作用</th><th>用法</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>把右边给左边</td></tr><tr><td>==</td><td>判断</td><td>判断两边值是否相等(注意此时有隐式转换)</td></tr><tr><td>===</td><td>全等</td><td>判断两边的值和数据类型是否完全相同</td></tr></tbody></table><p>代码演示</p><blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//1.等于符号，是默认转换类型，会把字符串的数据类型转换为数字型只要求值相等就可以了(只需要值相等，类型会自动转换)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">18</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">consjole</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//2.我们程序里面有全等一模一样，要求两侧的值，还有数据类型完全一样才可以（必须要值和类型都相等）</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">18</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div></blockquote><h3 id="小结-1" tabindex="-1">小结 <a class="header-anchor" href="#小结-1" aria-hidden="true">#</a></h3><ul><li><strong><code>==</code></strong>：在比较时会先进行类型转换，然后再比较值是否相等。</li><li><strong><code>===</code></strong>：直接比较值和数据类型，不进行任何类型转换。</li></ul><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h3><p>概念：逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值，后面开发中经常用于多个条件的判断</p><table><thead><tr><th>逻辑运算符</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>“逻辑与”，简称&quot;与&quot; and</td><td>true&amp;&amp;false</td></tr><tr><td>||</td><td>“逻辑或”，简称&quot;与&quot; or</td><td>1||2||3</td></tr><tr><td>！</td><td>“逻辑非”，简称&quot;非&quot; not</td><td>!true</td></tr></tbody></table><blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//1.逻辑与&amp;&amp; and两侧都为true结果才是true 只要有一侧为false结果就为false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//2.逻辑或 ||  or 两侧都为false 结果才是false 只有一侧为true ，结果就是true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"></span></code></pre></div></blockquote><h4 id="短路运算-逻辑中断" tabindex="-1">短路运算(逻辑中断) <a class="header-anchor" href="#短路运算-逻辑中断" aria-hidden="true">#</a></h4><p>短路运算的原理：当有多个表达式(值)时，左边的表达式值可以确定结果时，就不在继续运算右边的表达式的值</p><h5 id="_1-逻辑与" tabindex="-1">1.逻辑与 <a class="header-anchor" href="#_1-逻辑与" aria-hidden="true">#</a></h5><ul><li>语法：表达式 1&amp;&amp;表达式 2</li><li>如果第一个表达式的值为真，则返回表达式 2</li><li>如果第一个表示式的值为假，则返回表达式 1</li></ul><h5 id="_2-逻辑或" tabindex="-1">2.逻辑或 <a class="header-anchor" href="#_2-逻辑或" aria-hidden="true">#</a></h5><ul><li>语法：表达式 1||表达式 2</li><li>如果第一个表达式的值为真，则返回表达式 1</li><li>如果第一个表达式的值为假，则返回表达式 2</li></ul><blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//1.用我们的布尔值参与的逻辑运算  true&amp;&amp;false==false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//2.123&amp;&amp;456 是值或者是表达式参与了逻辑运算？</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//3.逻辑与短路运算，如果表达式1 结果为真 ，则返回表达式2，如果表达式1为假，那么返回表达式1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//除0以外的数都为真</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1233</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2344</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">352</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">456</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8789</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//如果有空的或者否定的为假，其余为真</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//(0,&#39;&#39;,null,undefined,NaN)空</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//4.逻辑或短路运算   如果表达式1为真 结果为真 则返回的是表达式1 如果表达式1 结果为假 则返回的是表达式2</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">456</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//123</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">456</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">123</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//123</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//逻辑中断很重要，它会影响我们程序运行的结果</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//123</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//11</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(num)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//11</span></span>
<span class="line"></span></code></pre></div></blockquote><h3 id="赋值运算符" tabindex="-1">赋值运算符 <a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a></h3><p>概念：用来把数据赋值给变量的运算符</p><table><thead><tr><th style="text-align:left;">赋值运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">案例</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">直接赋值</td><td style="text-align:left;">var name=‘小明’;</td></tr><tr><td style="text-align:left;">+= ，-=</td><td style="text-align:left;">加，减一个数后赋值</td><td style="text-align:left;">var age=10; age+=5; //age=15</td></tr><tr><td style="text-align:left;">*=，/=,%=</td><td style="text-align:left;">乘，除，取模后赋值</td><td style="text-align:left;">var age=2; age*=5;//age=10</td></tr></tbody></table><h4 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">优先级</th><th style="text-align:left;">运算符</th><th style="text-align:left;">顺序</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">小括号</td><td style="text-align:left;">()</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">一元运算符</td><td style="text-align:left;">++，–，！</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">算数运算符</td><td style="text-align:left;">先*，/ %后+ -</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;">关系运算符</td><td style="text-align:left;">&gt; &gt; = &lt; &lt; =</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;">相等运算符</td><td style="text-align:left;">== != === !==</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;">逻辑运算符</td><td style="text-align:left;">先&amp;&amp; 后</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;">赋值运算符</td><td style="text-align:left;">=</td></tr><tr><td style="text-align:left;">8</td><td style="text-align:left;">逗号运算符</td><td style="text-align:left;">,</td></tr></tbody></table>`,80),p=[o];function e(c,r,y,C,D,A){return a(),l("div",null,p)}const d=s(t,[["render",e]]);export{F as __pageData,d as default};
